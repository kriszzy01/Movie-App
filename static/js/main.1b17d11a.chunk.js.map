{"version":3,"sources":["features/slices/searchSlice.js","features/header/Header.js","features/slices/popularSlice.js","features/slices/topRatedSlice.js","features/slices/upComingSlice.js","features/card/Card.js","features/pages/pageHeading/PageHeading.js","features/pages/home/Home.js","features/pages/pagination/Pagination.js","features/pages/TopRated.js","features/pages/Upcoming.js","features/pages/Popular.js","features/pages/SearchResults.js","App.js","store.js","index.js"],"names":["searchAdapter","createEntityAdapter","initialState","getInitialState","currentPage","totalPages","status","error","fetchSearchResults","createAsyncThunk","query","a","getState","queryString","encodeURI","popular","request_url","fetch","response","json","searchSlice","createSlice","name","reducers","nextPage","reducer","state","prevPage","extraReducers","pending","fulfilled","action","payload","results","page","total_pages","setAll","rejected","currentSearchPage","search","actions","totalSearchPage","selectSearchMovies","getSelectors","selectAll","Header","useState","showNav","setShowNav","searchInput","setSearchInput","showSearchInput","setShowSearchInput","barsIcon","icon","faBars","timesIcon","faTimes","searchIcon","faSearch","toggleNav","navMenu","map","item","key","exact","to","onClick","dispatch","useDispatch","className","previousSearch","console","log","type","value","onChange","event","target","placeholder","popularAdapter","currentPopularPage","fetchPopularMovies","popularSlice","popularMovieStatus","totalPopularPage","selectPopularMovies","topRatedAdapter","currentTopRatedPage","topRated","fetchtopRatedMovies","topRatedSlice","topRatedMovieStatus","totalTopRatedPage","selectTopRatedMovies","upComingAdapter","currentUpComingPage","upComing","fetchUpComingMovies","upComingSlice","upComingMovieStatus","totalUpComingPage","selectUpComingMovies","Card","title","rating","poster","year","src","alt","undefined","slice","PageHeading","browseAll","popularPageCurrent","useSelector","popularPageTotal","topRatedPageCurrent","topRatedPageTotal","upComingPageCurrent","upComingTotal","searchPageCurrent","searchResultTotal","totalPage","Home","popularMoviesArray","topRatedMoviesArray","upComingMoviesArray","popularStatus","topRatedStatus","upComingStatus","useEffect","popularMovies","movies","vote_average","poster_path","release_date","topRatedMovies","upComingMovies","Pagination","category","searchPageTotal","nextPopularPage","nextTopRatedPage","nextUpComingPage","nextSearchPage","prevPopularPage","prevTopRatedPage","prevUpComingPage","prevSearchPage","fetchNewPage","TopRated","Upcoming","Popular","SearchResults","searchResults","App","path","popularReducer","topRatedReducer","upComingReducer","searchReducer","store","configureStore","destination","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.1b17d11a.chunk.js","sourcesContent":["import {createAsyncThunk, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst searchAdapter = createEntityAdapter();\r\n\r\nconst initialState = searchAdapter.getInitialState({\r\n    currentPage: 1,\r\n    totalPages: \"\",\r\n    status: \"idle\",\r\n    error: null\r\n});\r\n\r\nexport const fetchSearchResults = createAsyncThunk(\"search/fetchSearchResults\",\r\n    async (query, {getState}) => {\r\n        const queryString = encodeURI(query);\r\n        const api_url = \"https://api.themoviedb.org/3/search/movie\";\r\n        const key = \"600f5cedd909fa355f1beee66846ab98\";\r\n\r\n        const {currentPage} = getState().popular;\r\n\r\n        let request_url = `${api_url}?api_key=${key}&query=${queryString}&language=en-US&page=${currentPage}&include_adult=false`;\r\n\r\n        const response = await fetch(request_url);\r\n        return response.json();\r\n    }\r\n)\r\n\r\nconst searchSlice = createSlice({\r\n    name: \"search\",\r\n    initialState,\r\n    reducers: {\r\n        nextPage: {\r\n            reducer(state) {\r\n                state.currentPage++;\r\n            }\r\n        }, \r\n        prevPage: {\r\n            reducer(state) {\r\n                state.currentPage--;\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchSearchResults.pending] (state) {\r\n            if (state.status === \"idle\") {\r\n                state.status = \"pending\";\r\n            }\r\n        },\r\n\r\n        [fetchSearchResults.fulfilled] (state, action) {\r\n            const { results, page, total_pages } = action.payload;\r\n\r\n            searchAdapter.setAll(state, results);\r\n            state.totalPages = total_pages;\r\n            state.currentPage = page;\r\n            state.status = \"succeded\";\r\n        },\r\n\r\n        [fetchSearchResults.rejected](state, action) {\r\n            state.error = action.error;\r\n        }\r\n    }\r\n});\r\n\r\nexport default searchSlice.reducer;\r\nexport const currentSearchPage = state => state.search.currentPage;\r\n\r\nexport const {nextPage, prevPage} = searchSlice.actions;\r\n\r\nexport const searchMovieStatus = state => state.search.status;\r\nexport const totalSearchPage = state => state.search.totalPages;\r\n\r\nexport const {\r\n    selectAll: selectSearchMovies\r\n} = searchAdapter.getSelectors(state => state.search)","import React, { useState } from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faBars, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { fetchSearchResults } from \"../slices/searchSlice\";\r\nimport \"./Header.css\";\r\n\r\nexport const Header = () => {\r\n    const [showNav, setShowNav] = useState(false);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [showSearchInput, setShowSearchInput] = useState(false);\r\n\r\n    const barsIcon = <FontAwesomeIcon icon={faBars} />;\r\n    const timesIcon = <FontAwesomeIcon icon={faTimes} />;\r\n    const searchIcon = <FontAwesomeIcon icon={faSearch} />;\r\n\r\n    const toggleNav = () => setShowNav(!showNav);\r\n\r\n    const navItems = [\"Home\", \"Popular\", \"Top Rated\", \"Upcoming\"];\r\n    const navMenu = navItems.map(item => {\r\n        return (\r\n            <li key={item}>\r\n                <NavLink exact to={item === \"Home\" ? \"/Movie-App\" : `/${item}`} onClick={toggleNav}>{item}</NavLink>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    const handleSearchInput = event => setSearchInput(event.target.value);\r\n    const dispatch = useDispatch();\r\n\r\n    const searchMovie = () => {\r\n        let previousSearch = null;\r\n\r\n        if (searchInput === \"\") {\r\n            setShowSearchInput(!showSearchInput);\r\n        } else if (searchInput === previousSearch ) {\r\n            return;\r\n        } else {\r\n            dispatch(fetchSearchResults(searchInput));\r\n            previousSearch = searchInput;\r\n            setSearchInput(\"\");\r\n            setShowSearchInput(!showSearchInput);\r\n        }\r\n        console.log(previousSearch)\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <span className=\"toggleNavBtn\" onClick={toggleNav}>\r\n                {showNav === false ? barsIcon : timesIcon}\r\n            </span>\r\n\r\n            <nav className={showNav ? \"showNav\" : \"hideNav\"}>\r\n                <ul>{navMenu}</ul>\r\n            </nav>\r\n\r\n            <section className={showSearchInput ? \"searchBtn showSearchInput\" : \"searchBtn hideSearchInput\"}>\r\n                <p onClick={searchMovie}>\r\n                    {searchInput === \"\" ? searchIcon: <NavLink to=\"/Search Results\">{searchIcon}</NavLink>}\r\n                </p>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={searchInput}\r\n                    onChange={handleSearchInput}\r\n                    placeholder=\"Search Movie\"\r\n                />\r\n            </section>\r\n\r\n        </header>\r\n    );\r\n};","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\n\r\nconst popularAdapter = createEntityAdapter();\r\n\r\nconst initialState = popularAdapter.getInitialState({\r\n    currentPage: 1,\r\n    totalPages: \"\",\r\n    status: \"idle\",\r\n    error: null\r\n});\r\n\r\nexport const currentPopularPage = state => state.popular.currentPage;\r\n\r\nexport const fetchPopularMovies = createAsyncThunk(\"popular/fetchPopularMovies\",\r\n    async (popular, {getState}) => {\r\n        const api_url = \"https://api.themoviedb.org/3/movie/popular\";\r\n        const key = \"600f5cedd909fa355f1beee66846ab98\";\r\n\r\n        const {currentPage} = getState().popular;\r\n\r\n        let request_url = `${api_url}?api_key=${key}&language=en-US&page=${currentPage}`;\r\n\r\n        const response = await fetch(request_url);\r\n        return response.json();\r\n    }\r\n)\r\n\r\nconst popularSlice = createSlice({\r\n    name: \"popular\",\r\n    initialState,\r\n    reducers: {\r\n        nextPage: {\r\n            reducer(state) {\r\n                state.currentPage++;\r\n            }\r\n        }, \r\n        prevPage: {\r\n            reducer(state) {\r\n                state.currentPage--;\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchPopularMovies.pending](state) {\r\n            if (state.status === \"idle\") {\r\n                state.status = \"pending\";\r\n            }\r\n        },\r\n\r\n        [fetchPopularMovies.fulfilled](state, action) {\r\n            const { results, page, total_pages } = action.payload;\r\n\r\n            popularAdapter.setAll(state, results);\r\n            state.totalPages = total_pages;\r\n            state.currentPage = page;\r\n            state.status = \"succeded\";\r\n        },\r\n\r\n        [fetchPopularMovies.rejected](state, action) {\r\n            state.error = action.error;\r\n        }\r\n    }\r\n});\r\n\r\nexport default popularSlice.reducer;\r\nexport const {nextPage, prevPage} = popularSlice.actions;\r\n\r\nexport const popularMovieStatus = state => state.popular.status;\r\nexport const totalPopularPage = state => state.popular.totalPages;\r\n\r\nexport const {\r\n    selectAll: selectPopularMovies\r\n} = popularAdapter.getSelectors(state => state.popular)","import { createSlice, createEntityAdapter, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst topRatedAdapter = createEntityAdapter();\r\n\r\nconst initialState = topRatedAdapter.getInitialState({\r\n    currentPage: 1,\r\n    totalPages: \"\",\r\n    status: \"idle\",\r\n    error: null\r\n});\r\n\r\nexport const currentTopRatedPage = state => state.topRated.currentPage;\r\nexport const fetchtopRatedMovies = createAsyncThunk(\"topRated/fetchtopRatedMovies\",\r\n    async (topRated, {getState}) => {\r\n        const api_url = \"https://api.themoviedb.org/3/movie/top_rated\";\r\n        const key = \"600f5cedd909fa355f1beee66846ab98\";\r\n\r\n        const {currentPage} = getState().topRated;\r\n\r\n        const request_url = `${api_url}?api_key=${key}&language=en-US&page=${currentPage}`;\r\n\r\n        const response = await fetch(request_url);\r\n        return response.json();\r\n    }\r\n);\r\n\r\nconst topRatedSlice = createSlice({\r\n    name: \"topRated\",\r\n    initialState,\r\n    reducers: {\r\n        nextPage: {\r\n            reducer(state) {\r\n                state.currentPage++;\r\n            }\r\n        }, \r\n        prevPage: {\r\n            reducer(state) {\r\n                state.currentPage--;\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchtopRatedMovies.pending](state) {\r\n            if (state.status === \"idle\") {\r\n                state.status = \"pending\";\r\n            }\r\n        },\r\n\r\n        [fetchtopRatedMovies.fulfilled](state, action) {\r\n            const { results, page, total_pages } = action.payload;\r\n\r\n            topRatedAdapter.setAll(state, results);\r\n            state.totalPages = total_pages;\r\n            state.currentPage = page;\r\n            state.status = \"succeded\";\r\n        },\r\n\r\n        [fetchtopRatedMovies.rejected](state, action) {\r\n            state.error = action.error;\r\n        }\r\n    }\r\n});\r\n\r\nexport default topRatedSlice.reducer;\r\nexport const {nextPage, prevPage} = topRatedSlice.actions;\r\n\r\nexport const topRatedMovieStatus = state => state.topRated.status;\r\nexport const totalTopRatedPage = state => state.topRated.totalPages;\r\n\r\nexport const {\r\n    selectAll: selectTopRatedMovies\r\n} = topRatedAdapter.getSelectors(state => state.topRated);","import { createSlice, createEntityAdapter, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst upComingAdapter = createEntityAdapter();\r\n\r\nconst initialState = upComingAdapter.getInitialState({\r\n    currentPage: 1,\r\n    totalPages: \"\",\r\n    status: \"idle\",\r\n    error: null\r\n});\r\n\r\nexport const currentUpComingPage = state => state.upComing.currentPage;\r\n\r\nexport const fetchUpComingMovies = createAsyncThunk(\"upComing/fetchupComingMovies\",\r\n    async (upComing, {getState}) => {\r\n        const api_url = \"https://api.themoviedb.org/3/movie/upcoming\";\r\n        const key = \"600f5cedd909fa355f1beee66846ab98\";\r\n\r\n        const {currentPage} = getState().upComing;\r\n\r\n        const request_url = `${api_url}?api_key=${key}&language=en-US&page=${currentPage}`;\r\n\r\n        const response = await fetch(request_url);\r\n        return response.json();\r\n    }\r\n);\r\n\r\nconst upComingSlice = createSlice({\r\n    name: \"upComing\",\r\n    initialState,\r\n    reducers: {\r\n        nextPage: {\r\n            reducer(state) {\r\n                state.currentPage++;\r\n            }\r\n        }, \r\n        prevPage: {\r\n            reducer(state) {\r\n                state.currentPage--;\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchUpComingMovies.pending](state) {\r\n            if (state.status === \"idle\") {\r\n                state.status = \"pending\";\r\n            }\r\n        },\r\n\r\n        [fetchUpComingMovies.fulfilled](state, action) {\r\n            const { results, page, total_pages } = action.payload;\r\n\r\n            upComingAdapter.setAll(state, results);\r\n            state.totalPages = total_pages;\r\n            state.currentPage = page;\r\n            state.status = \"succeded\";\r\n        },\r\n\r\n        [fetchUpComingMovies.rejected](state, action) {\r\n            state.error = action.error;\r\n        }\r\n    }\r\n});\r\n\r\nexport default upComingSlice.reducer;\r\nexport const {nextPage, prevPage} = upComingSlice.actions;\r\n\r\nexport const upComingMovieStatus = state => state.upComing.status;\r\nexport const totalUpComingPage = state => state.upComing.totalPages;\r\n\r\nexport const {\r\n    selectAll: selectUpComingMovies\r\n} = upComingAdapter.getSelectors(state => state.upComing);","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport const Card = ({title, rating, poster, year}) => {\r\n    return(\r\n        <section className=\"card\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${poster}`} alt={title}/>\r\n            <p>{title}</p>\r\n            <p>{year !== undefined ? year.slice(0, 4): \"Not Available\"}</p>\r\n            <p>{rating}</p>\r\n        </section>\r\n    );\r\n};","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport \"./PageHeading.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { totalPopularPage, currentPopularPage } from \"../../slices/popularSlice\";\r\nimport { totalTopRatedPage, currentTopRatedPage } from \"../../slices/topRatedSlice\";\r\nimport { totalUpComingPage, currentUpComingPage } from \"../../slices/upComingSlice\";\r\nimport { totalSearchPage, currentSearchPage} from \"../../slices/searchSlice\";\r\n\r\nexport const PageHeading = ({ page, browseAll }) => {\r\n    const popularPageCurrent = useSelector(currentPopularPage);\r\n    const popularPageTotal = useSelector(totalPopularPage);\r\n    \r\n    const topRatedPageCurrent = useSelector(currentTopRatedPage);\r\n    const topRatedPageTotal = useSelector(totalTopRatedPage);\r\n\r\n    const upComingPageCurrent = useSelector(currentUpComingPage);\r\n    const upComingTotal = useSelector(totalUpComingPage);\r\n\r\n    const searchPageCurrent = useSelector(currentSearchPage);\r\n    const searchResultTotal = useSelector(totalSearchPage);\r\n\r\n    const currentPage =\r\n        page === \"Popular\" ? popularPageCurrent :\r\n        page === \"Top Rated\" ? topRatedPageCurrent : \r\n        page === \"upComing\" ? upComingPageCurrent : searchPageCurrent;\r\n\r\n    const totalPage =\r\n        page === \"Popular\" ? popularPageTotal :\r\n        page === \"Top Rated\" ? topRatedPageTotal : \r\n        page === \"upComing\" ? upComingTotal : searchResultTotal;\r\n\r\n    return (\r\n        <section className=\"pageHeading\">\r\n            <h1>{`${page} ${page === \"Search\" ? \"Result\": \"Movies\"}`}</h1>\r\n            {browseAll &&\r\n                <p><NavLink to={`/${page}`}>Browse All</NavLink></p>\r\n            }\r\n            {!browseAll && <p>Page {currentPage} of {totalPage}</p>}\r\n        </section>\r\n    );\r\n};","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPopularMovies, popularMovieStatus, selectPopularMovies } from \"../../slices/popularSlice\";\r\nimport { fetchtopRatedMovies, topRatedMovieStatus, selectTopRatedMovies } from \"../../slices/topRatedSlice\";\r\nimport { fetchUpComingMovies, upComingMovieStatus, selectUpComingMovies } from \"../../slices/upComingSlice\";\r\nimport { Card } from \"../../card/Card\";\r\nimport { PageHeading } from \"../pageHeading/PageHeading\";\r\nimport \"./Home.css\"\r\n\r\nexport const Home = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const popularMoviesArray = useSelector(selectPopularMovies).slice(0, 4);\r\n    const topRatedMoviesArray = useSelector(selectTopRatedMovies).slice(0, 4);\r\n    const upComingMoviesArray = useSelector(selectUpComingMovies).slice(0, 4);\r\n\r\n    const popularStatus = useSelector(popularMovieStatus);\r\n    const topRatedStatus = useSelector(topRatedMovieStatus);\r\n    const upComingStatus = useSelector(upComingMovieStatus);\r\n\r\n    useEffect(() => {\r\n        if (popularStatus === \"idle\") {\r\n            dispatch(fetchPopularMovies());\r\n        }\r\n        if (upComingStatus === \"idle\") {\r\n            dispatch(fetchUpComingMovies());\r\n        }\r\n        if (topRatedStatus === \"idle\") {\r\n            dispatch(fetchtopRatedMovies());\r\n        }\r\n\r\n    }, [popularStatus, topRatedStatus, upComingStatus, dispatch]);\r\n\r\n    const popularMovies = popularMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    const topRatedMovies = topRatedMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    const upComingMovies = upComingMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Popular\" browseAll={true} />\r\n                <section className=\"movieList\">{popularMovies}</section>\r\n            </section>\r\n\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Upcoming\" browseAll={true} />\r\n                <section className=\"movieList\">{upComingMovies}</section>\r\n            </section>\r\n\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Top Rated\" browseAll={true} />\r\n                <section className=\"movieList\">{topRatedMovies}</section>\r\n            </section>\r\n        </main>\r\n    );\r\n};","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPopularMovies, totalPopularPage, currentPopularPage, nextPage as nextPopularPage, prevPage as prevPopularPage } from \"../../slices/popularSlice\";\r\nimport { fetchtopRatedMovies, totalTopRatedPage, currentTopRatedPage, nextPage as nextTopRatedPage, prevPage as prevTopRatedPage } from \"../../slices/topRatedSlice\";\r\nimport { fetchUpComingMovies, totalUpComingPage, currentUpComingPage, nextPage as nextUpComingPage, prevPage as prevUpComingPage } from \"../../slices/upComingSlice\";\r\nimport { fetchSearchResults, totalSearchPage, currentSearchPage, nextPage as nextSearchPage, prevPage as prevSearchPage } from \"../../slices/searchSlice\";\r\nimport \"./Pagination.css\";\r\n\r\nexport const Pagination = ({ category }) => {\r\n    const popularPageCurrent = useSelector(currentPopularPage);\r\n    const popularPageTotal = useSelector(totalPopularPage);\r\n    \r\n    const topRatedPageCurrent = useSelector(currentTopRatedPage);\r\n    const topRatedPageTotal = useSelector(totalTopRatedPage);\r\n\r\n    const upComingPageCurrent = useSelector(currentUpComingPage);\r\n    const upComingTotal = useSelector(totalUpComingPage);\r\n\r\n    const searchPageCurrent = useSelector(currentSearchPage);\r\n    const searchPageTotal = useSelector(totalSearchPage);\r\n\r\n    const currentPage =\r\n        category === \"Popular\" ? popularPageCurrent :\r\n        category === \"Top Rated\" ? topRatedPageCurrent : \r\n        category === \"upComing\" ? upComingPageCurrent : searchPageCurrent;\r\n\r\n    const totalPage =\r\n        category === \"Popular\" ? popularPageTotal :\r\n        category === \"Top Rated\" ? topRatedPageTotal : \r\n        category === \"upComing\" ? upComingTotal : searchPageTotal;\r\n\r\n    const nextPage =\r\n        category === \"Popular\" ? nextPopularPage :\r\n        category === \"Top Rated\" ? nextTopRatedPage : \r\n        category === \"upComing\" ? nextUpComingPage : nextSearchPage;\r\n\r\n    const prevPage =\r\n        category === \"Popular\" ? prevPopularPage :\r\n        category === \"Top Rated\" ? prevTopRatedPage : \r\n        category === \"upComing\" ? prevUpComingPage: prevSearchPage;\r\n\r\n    const fetchNewPage =\r\n        category === \"Popular\" ? fetchPopularMovies :\r\n        category === \"Top Rated\" ? fetchtopRatedMovies : \r\n        category === \"upComing\" ? fetchUpComingMovies: fetchSearchResults;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleNextPage = () => {\r\n        dispatch(nextPage());\r\n        dispatch(fetchNewPage());\r\n    }\r\n    const handlePrevPage = () => {\r\n        dispatch(prevPage());\r\n        dispatch(fetchNewPage());\r\n    }\r\n\r\n    return (\r\n        <section className=\"pagination\">\r\n            {currentPage !== 1 && <button onClick={handlePrevPage}>Prev</button>}\r\n            <p>Page {currentPage} of {totalPage}</p>\r\n            {currentPage !== totalPage && <button onClick={handleNextPage}>Next</button>}\r\n        </section>\r\n    );\r\n};","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card } from \"../card/Card\";\r\nimport { selectTopRatedMovies, fetchtopRatedMovies, topRatedMovieStatus } from \"../slices/topRatedSlice\";\r\nimport {PageHeading} from \"./pageHeading/PageHeading\";\r\nimport {Pagination} from \"./pagination/Pagination\";\r\n\r\nexport const TopRated = () => {\r\n    const topRatedMoviesArray = useSelector(selectTopRatedMovies);\r\n\r\n    const topRatedMovies = topRatedMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const topRatedStatus = useSelector(topRatedMovieStatus);\r\n\r\n    useEffect(() => {\r\n        if (topRatedStatus === \"idle\") {\r\n            dispatch(fetchtopRatedMovies());\r\n        }\r\n\r\n    }, [ topRatedStatus, dispatch]);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Top Rated\" />\r\n                <section className=\"movieList\">{topRatedMovies}</section>\r\n                <Pagination category=\"Top Rated\"/>\r\n            </section>\r\n        </main>\r\n    );\r\n};","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card } from \"../card/Card\";\r\nimport { selectUpComingMovies, fetchUpComingMovies, upComingMovieStatus } from \"../slices/upComingSlice\";\r\nimport {PageHeading} from \"./pageHeading/PageHeading\";\r\nimport {Pagination} from \"./pagination/Pagination\";\r\n\r\nexport const Upcoming = () => {\r\n    const upComingMoviesArray = useSelector(selectUpComingMovies);\r\n\r\n    const upComingMovies = upComingMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const upComingStatus = useSelector(upComingMovieStatus);\r\n\r\n    useEffect(() => {\r\n        if (upComingStatus === \"idle\") {\r\n            dispatch(fetchUpComingMovies());\r\n        }\r\n\r\n    }, [upComingStatus, dispatch]);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Upcoming\" />\r\n                <section className=\"movieList\">{upComingMovies}</section>\r\n                <Pagination category=\"upComing\"/>\r\n            </section>\r\n        </main>\r\n    );\r\n};","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card } from \"../card/Card\";\r\nimport { selectPopularMovies,fetchPopularMovies, popularMovieStatus, } from \"../slices/popularSlice\";\r\nimport {PageHeading} from \"./pageHeading/PageHeading\";\r\nimport {Pagination} from \"./pagination/Pagination\";\r\n\r\nexport const Popular = () => {\r\n    const popularMoviesArray = useSelector(selectPopularMovies);\r\n\r\n    const popularMovies = popularMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    const popularStatus = useSelector(popularMovieStatus);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (popularStatus === \"idle\") {\r\n            dispatch(fetchPopularMovies());\r\n        }\r\n\r\n    }, [popularStatus, dispatch]);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Popular\" />\r\n                <section className=\"movieList\">{popularMovies}</section>\r\n                <Pagination category=\"Popular\"/>\r\n            </section>\r\n        </main>\r\n    );\r\n};","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { Card } from \"../card/Card\";\r\nimport { selectSearchMovies } from \"../slices/searchSlice\";\r\nimport {PageHeading} from \"./pageHeading/PageHeading\";\r\nimport {Pagination} from \"./pagination/Pagination\";\r\n\r\nexport const SearchResults = () => {\r\n    const searchMoviesArray = useSelector(selectSearchMovies);\r\n\r\n    const searchResults = searchMoviesArray.map(movies => {\r\n        const { title, vote_average: rating, poster_path: poster, release_date: year } = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating} />\r\n    });\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"movieCategory\">\r\n                <PageHeading page=\"Search\" />\r\n                <section className=\"movieList\">{searchResults}</section>\r\n                <Pagination category=\"search\"/>\r\n            </section>\r\n        </main>\r\n    );\r\n};","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Header } from \"./features/header/Header\";\r\nimport { Home } from \"./features/pages/home/Home\";\r\nimport {TopRated} from \"./features/pages/TopRated\";\r\nimport {Upcoming} from \"./features/pages/Upcoming\";\r\nimport {Popular} from \"./features/pages/Popular\";\r\nimport {SearchResults} from \"./features/pages/SearchResults\";\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n\r\n            <Switch>\r\n                <Route path=\"/Movie-App\"><Home /></Route>\r\n                <Route path=\"/Top Rated\"><TopRated/></Route>\r\n                <Route path=\"/Upcoming\"><Upcoming/></Route>\r\n                <Route path=\"/Popular\"><Popular/></Route>\r\n                <Route path=\"/Search Results\"><SearchResults/></Route>\r\n            </Switch>\r\n\r\n        </Router>\r\n    );\r\n};","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport popularReducer from \"./features/slices/popularSlice\";\r\nimport topRatedReducer from \"./features/slices/topRatedSlice\";\r\nimport upComingReducer from \"./features/slices/upComingSlice\";\r\nimport searchReducer from \"./features/slices/searchSlice\";\r\n\r\nconst reducers = {\r\n    popular: popularReducer,\r\n    topRated: topRatedReducer,\r\n    upComing: upComingReducer,\r\n    search: searchReducer\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: reducers\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {App} from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store\";\r\nimport \"./index.css\"\r\n\r\nconst destination = document.querySelector(\"#root\");\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    destination\r\n);"],"sourceRoot":""}
{"version":3,"sources":["features/header/Header.js","features/slices/popularSlice.js","features/card/Card.js","features/pages/home/Home.js","App.js","store.js","index.js"],"names":["Header","useState","showNav","setShowNav","searchInput","setSearchInput","showSearchInput","setShowSearchInput","barsIcon","icon","faBars","timesIcon","faTimes","searchIcon","faSearch","navMenu","map","item","key","exact","to","className","onClick","type","value","onChange","event","target","placeholder","popularAdapter","createEntityAdapter","initialState","getInitialState","currentPage","totalPages","status","error","fetchPopularMovies","createAsyncThunk","a","request_url","fetch","response","json","popularSlice","createSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","results","page","total_pages","upsertMany","popularMovieStatus","popular","selectPopularMovies","getSelectors","selectAll","Card","title","rating","poster","year","console","log","src","alt","slice","Home","dispatch","useDispatch","popularMoviesArray","useSelector","popularStatus","useEffect","popularMovies","movies","vote_average","poster_path","release_date","App","path","popularReducer","store","configureStore","reducer","destination","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.6ed86b63.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faBars, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nexport const Header = () => {\r\n    const [showNav, setShowNav] = useState(false);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [showSearchInput, setShowSearchInput] = useState(false);\r\n\r\n    const barsIcon = <FontAwesomeIcon icon={faBars} />;\r\n    const timesIcon = <FontAwesomeIcon icon={faTimes} />;\r\n    const searchIcon = <FontAwesomeIcon icon={faSearch} />;\r\n\r\n    const navItems = [\"Home\", \"Popular\", \"Top Rated\", \"Upcoming\"];\r\n    const navMenu = navItems.map(item => {\r\n        return (\r\n            <li key={item}>\r\n                <NavLink exact to={item === \"Home\" ? \"/Movie-App\" : `/${item}`}>{item}</NavLink>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    const toggleNav = () => setShowNav(!showNav);\r\n\r\n    const handleSearchInput = event => setSearchInput(event.target.value);\r\n\r\n    const searchMovie = () => {\r\n\r\n        if (searchInput === \"\") {\r\n            setShowSearchInput(!showSearchInput);\r\n        } else {\r\n            //Some command to search movie\r\n            setSearchInput(\"\");\r\n            setShowSearchInput(!showSearchInput);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <span className=\"toggleNavBtn\" onClick={toggleNav}>\r\n                {showNav === false ? barsIcon : timesIcon}\r\n            </span>\r\n\r\n            <nav className={showNav ? \"showNav\" : \"hideNav\"}>\r\n                <ul>{navMenu}</ul>\r\n            </nav>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={searchInput}\r\n                onChange={handleSearchInput}\r\n                placeholder=\"Enter Name of Movie\"\r\n                className={showSearchInput ? \"searchBtn showSearchInput\" : \"searchBtn hideSearchInput\"}\r\n            />\r\n\r\n            <p className=\"searchBtn\" onClick={searchMovie}>{searchIcon}</p>\r\n        </header>\r\n    );\r\n};","import {createSlice, createAsyncThunk, createEntityAdapter} from \"@reduxjs/toolkit\";\r\n\r\nconst popularAdapter = createEntityAdapter();\r\n\r\nconst initialState = popularAdapter.getInitialState({\r\n    currentPage: \"\",\r\n    totalPages: \"\",\r\n    status: \"idle\",\r\n    error: null\r\n});\r\n\r\nexport const fetchPopularMovies = createAsyncThunk(\"popular/fetchPopularMovies\",\r\n    async () => {\r\n        const api_url = \"https://api.themoviedb.org/3/movie/popular\";\r\n        const key = \"600f5cedd909fa355f1beee66846ab98\";\r\n        \r\n        const request_url = `${api_url}?api_key=${key}&language=en-US`;\r\n\r\n        const response = await fetch(request_url);\r\n        return response.json();\r\n    }\r\n)\r\n\r\nconst popularSlice = createSlice({\r\n    name: \"popular\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchPopularMovies.pending] (state) {\r\n            if (state.status === \"idle\") {\r\n                state.status = \"pending\";\r\n            }\r\n        },\r\n\r\n        [fetchPopularMovies.fulfilled] (state, action) {\r\n            const {results, page, total_pages} = action.payload;\r\n\r\n            popularAdapter.upsertMany(state, results);\r\n            state.totalPages = total_pages;\r\n            state.currentPage = page;\r\n            state.status = \"succeded\";\r\n        },\r\n\r\n        [fetchPopularMovies] (state, action) {\r\n            state.error = action.error\r\n        }\r\n    }\r\n});\r\n\r\nexport default popularSlice.reducer;\r\nexport const popularMovieStatus = state => state.popular.status;\r\n\r\nexport const {\r\n    selectAll: selectPopularMovies\r\n} = popularAdapter.getSelectors(state => state.popular)","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport const Card = ({title, rating, poster, year}) => {\r\n    console.log(poster)\r\n    return(\r\n        <section className=\"card\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${poster}`} alt={title}/>\r\n            <p>{title}</p>\r\n            <p>{year.slice(0, 4)}</p>\r\n            <p>{rating}</p>\r\n        </section>\r\n    );\r\n};","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPopularMovies, popularMovieStatus, selectPopularMovies } from \"../../slices/popularSlice\";\r\nimport {Card} from \"../../card/Card\";\r\nimport \"./Home.css\"\r\n\r\nexport const Home = () => {\r\n    const dispatch = useDispatch();\r\n    const popularMoviesArray = useSelector(selectPopularMovies).slice(0, 6);\r\n    \r\n    const popularStatus = useSelector(popularMovieStatus);\r\n    useEffect(() => {\r\n        if (popularStatus === \"idle\") {\r\n            dispatch(fetchPopularMovies())\r\n        }\r\n    }, [popularStatus, dispatch]);\r\n\r\n    let popularMovies = popularMoviesArray.map(movies => {\r\n        const {title, vote_average: rating, poster_path: poster, release_date: year} = movies;\r\n\r\n        return <Card title={title} rating={rating} poster={poster} year={year} key={title + rating}/>\r\n    })\r\n\r\n    return (\r\n        <main>\r\n            {popularMovies}\r\n        </main>\r\n    );\r\n};","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Header } from \"./features/header/Header\";\r\nimport { Home } from \"./features/pages/home/Home\";\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n\r\n            <Switch>\r\n                <Route path=\"/Movie-App\"><Home /></Route>\r\n            </Switch>\r\n\r\n        </Router>\r\n    );\r\n};","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport popularReducer from \"./features/slices/popularSlice\";\r\n\r\nconst reducers = {\r\n    popular: popularReducer\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: reducers\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {App} from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store\";\r\nimport \"./index.css\"\r\n\r\nconst destination = document.querySelector(\"#root\");\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    destination\r\n);"],"sourceRoot":""}